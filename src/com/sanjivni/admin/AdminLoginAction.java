/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sanjivni.admin;

import java.security.MessageDigest;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.raxit.hibernate.Admin;
import com.raxit.hibernate.HibernateUtil;
import com.sanjivni.struts.action.MD5password;

/** 
 * MyEclipse Struts
 * Creation date: 07-31-2013
 * 
 * XDoclet definition:
 * @struts.action path="/adminLogin" name="adminLoginForm" input="/admin/adminLogin.jsp" scope="request" validate="true"
 */
public class AdminLoginAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdminLoginForm adminLoginForm = (AdminLoginForm) form;// TODO Auto-generated method stub
		
		String login = adminLoginForm.getAdminloginid();
		String _passwd = adminLoginForm.getAdminpasswd();
		String passwd = null;
		String adminid=null;
		
		/*try
		{
		MessageDigest md=MessageDigest.getInstance("MD5");
		String input=_passwd;
		md.update(input.getBytes());
		byte[] output=md.digest();
		MD5password sd = new MD5password();
		passwd = sd.bytesToHex(output);
		}
		catch(Exception e)
		{
			System.out.println(e.getMessage());
		}
		
		
		 Session sess = HibernateUtil.getSessionFactory().openSession();
		   Transaction t = sess.beginTransaction();
		   
		  
		   
		  	
	  		Query q  =	sess.createQuery("from Admin where  AdminID = :i and Password = :p");
	  		q.setString("i", login);
	  		q.setString("p", passwd);
	  		
	  		List<Admin> admin = (List<Admin>)q.list();
	  		sess.getTransaction().commit();
	  		
	  		for(Admin e : admin)
	  		{
	  			adminid = e.getAdminID();
	  			
	  		}*/
	  		
	  		HttpSession sanjivni = request.getSession();
	  		
	  		if(login.equals("Raxit") && _passwd.equals("Heli"))
	  		{
	  			
	  			
	  			sanjivni.setAttribute("HospitalAdmin", adminid);
	  			return mapping.findForward("success");
	  		}
	  		
	 
		
		
		return mapping.findForward("failure");
	}
}