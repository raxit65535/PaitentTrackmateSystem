/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sanjivni.doctor;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.raxit.hibernate.HibernateUtil;

/** 
 * MyEclipse Struts
 * Creation date: 09-21-2013
 * 
 * XDoclet definition:
 * @struts.action path="/doctorPrescription2" name="doctorPrescription2Form" input="doctor/doctorPrescription2.jsp" scope="request" validate="true"
 */
public class DoctorPrescription2Action extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DoctorPrescription2Form doctorPrescription2Form = (DoctorPrescription2Form) form;// TODO Auto-generated method stub
		
		int status=0;
		int result = 0;
		String st = "1";
		
		
	     String _doctorname = doctorPrescription2Form.getDoctorname();
		 String _designation = doctorPrescription2Form.getDesignation();;
		 String _uuid = doctorPrescription2Form.getUuid();
		 String _department = doctorPrescription2Form.getDepartment();
		 String _insuranceno = doctorPrescription2Form.getInsuranceno();
		 String _name = doctorPrescription2Form.getName();
		 String _email = doctorPrescription2Form.getEmail();
		 String _policy = doctorPrescription2Form.getPolicy();
		 String _dob = doctorPrescription2Form.getDob();
		 String _gender = doctorPrescription2Form.getGender();
		 String _phoneno = doctorPrescription2Form.getPhoneno();
		 String _idproof = doctorPrescription2Form.getIdproof();
		 String _value = doctorPrescription2Form.getValue();
		 String _admitdate = doctorPrescription2Form.getAdmitdate();
		 String _dischargedate = doctorPrescription2Form.getDischargedate();
		 String _complain = doctorPrescription2Form.getComplain();
		 String _history = doctorPrescription2Form.getHistory();
		 String _localexamination = doctorPrescription2Form.getLocalexamination();
		 String _provisionaldiagnosis = doctorPrescription2Form.getProvisionaldiagnosis();
		 String _tests = doctorPrescription2Form.getTests();
		String _finaldiagnosis = doctorPrescription2Form.getFinaldiagnosis();
		String _treetment = doctorPrescription2Form.getTreetment();
		String _remark = doctorPrescription2Form.getRemark();
		
		
		
		org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
		org.hibernate.Transaction t =  session.beginTransaction();
		PrescriptionPOJO pr = new PrescriptionPOJO();
		pr.setDoctorname(_doctorname);
		pr.setDepartment(_department);
		pr.setDesignation(_designation);
		pr.setUuid(_uuid);
		pr.setInsuranceno(_insuranceno);
		pr.setName(_name);
		pr.setEmail(_email);
		pr.setPolicy(_policy);
		pr.setDob(_dob);
		pr.setGender(_gender);
		pr.setPhoneno(_phoneno);
		pr.setIdproof(_idproof);
		pr.setValue(_value);
		pr.setAdmitdate(_admitdate);
		pr.setDischargedate(_dischargedate);
		pr.setComplain(_complain);
		pr.setHistory(_history);
		pr.setLocalexamination(_localexamination);
		pr.setProvisionaldiagnosis(_provisionaldiagnosis);
		pr.setTests(_tests);
		pr.setFinaldiagnosis(_finaldiagnosis);
		pr.setTreetment(_treetment);
		pr.setRemark(_remark);
		pr.setStatus("0");
		
		status = (Integer) session.save(pr);
		t.commit();
		session.close();
		
		
		/*Session sess1 = HibernateUtil.getSessionFactory().openSession();
		Transaction t1 = sess1.beginTransaction();
		
		Query q1 = sess1.createQuery("Update PaitentPOJO set Status = :s where insuranceno = :i");
		q1.setString("s", st);
		q1.setString("i",_insuranceno );
		
		result = q1.executeUpdate();
		*/
		
		if(status>0)
		{
			return mapping.findForward("success");
		}
		return mapping.findForward("failure");
	}
}